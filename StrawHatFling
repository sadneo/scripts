local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character
local mouse = player:GetMouse()

local dead
local bullet
local flinging = false

-- setup HAT
local result, error = pcall(function()
    bullet = character["StrawHat"]
end)
if result == false then
    print(error)
    player:Kick("Screenshot this errormessage and send to neo: "..error)
end

bullet.Parent = workspace
local bulletHandle = bullet.Handle
local bbv = Instance.new("BodyVelocity",bulletHandle)
wait()

character.Humanoid.Died:Connect(function()
    dead = true
end)

mouse.Button1Down:Connect(function()
    if dead == false then
        flinging = true
        local bbav = Instance.new("BodyAngularVelocity",bulletHandle)
        bbav.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
        bbav.P = 1000000000000000000000000000
        bbav.AngularVelocity = Vector3.new(10000000000000000000000000000000,100000000000000000000000000,100000000000000000)

        if game.Players:GetPlayerFromCharacter(mouse.Target.Parent) then
            repeat
                game:GetService("RunService").RenderStepped:Wait()
                bulletHandle.Position = mouse.Target.Parent.HumanoidRootPart.CFrame.Position
                wait(0.23)
            until character.Humanoid.Health == 100 or character.Humanoid.Health == 0
        elseif game.Players:GetPlayerFromCharacter(mouse.Target.Parent.Parent) then
            repeat 
                game:GetService("RunService").RenderStepped:Wait()
                bulletHandle.Position = mouse.Target.Parent.Parent.HumanoidRootPart.CFrame.Position
                wait(0.23)
            until character.Humanoid.Health == 100 or character.Humanoid.Health == 0
        else
            repeat 
                game:GetService("RunService").RenderStepped:Wait()
                bulletHandle.Position = mouse.Hit.Position
                wait(0.23)
            until character.Humanoid.Health == 100 or character.Humanoid.Health == 0
        end
        wait()
        flinging = false
    end
end)

repeat
    game:GetService("RunService").RenderStepped:Wait()

    if dead == false and bulletHandle.CanCollide == true then
        bulletHandle.CanCollide = false
    end

    if flinging == false and dead == false then
        bulletHandle.CFrame = character.Head.CFrame + Vector3.new(0,-15,0)
    end
until character.Humanoid.Health == 0
